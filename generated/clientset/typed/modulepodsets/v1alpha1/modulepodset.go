// Code generated by gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"
	modulepodsetv1alpha1 "kek/apis/modulepodset/v1alpha1"
	scheme "kek/generated/clientset/scheme"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ModulePodSetsGetter has a method to return a ModulePodSetInterface.
// A group's client should implement this interface.
type ModulePodSetsGetter interface {
	ModulePodSets(namespace string) ModulePodSetInterface
}

// ModulePodSetInterface has methods to work with ModulePodSet resources.
type ModulePodSetInterface interface {
	Create(ctx context.Context, modulePodSet *modulepodsetv1alpha1.ModulePodSet, opts v1.CreateOptions) (*modulepodsetv1alpha1.ModulePodSet, error)
	Update(ctx context.Context, modulePodSet *modulepodsetv1alpha1.ModulePodSet, opts v1.UpdateOptions) (*modulepodsetv1alpha1.ModulePodSet, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, modulePodSet *modulepodsetv1alpha1.ModulePodSet, opts v1.UpdateOptions) (*modulepodsetv1alpha1.ModulePodSet, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*modulepodsetv1alpha1.ModulePodSet, error)
	List(ctx context.Context, opts v1.ListOptions) (*modulepodsetv1alpha1.ModulePodSetList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *modulepodsetv1alpha1.ModulePodSet, err error)
	ModulePodSetExpansion
}

// modulePodSets implements ModulePodSetInterface
type modulePodSets struct {
	*gentype.ClientWithList[*modulepodsetv1alpha1.ModulePodSet, *modulepodsetv1alpha1.ModulePodSetList]
}

// newModulePodSets returns a ModulePodSets
func newModulePodSets(c *SpV1alpha1Client, namespace string) *modulePodSets {
	return &modulePodSets{
		gentype.NewClientWithList[*modulepodsetv1alpha1.ModulePodSet, *modulepodsetv1alpha1.ModulePodSetList](
			"modulepodsets",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *modulepodsetv1alpha1.ModulePodSet { return &modulepodsetv1alpha1.ModulePodSet{} },
			func() *modulepodsetv1alpha1.ModulePodSetList { return &modulepodsetv1alpha1.ModulePodSetList{} },
		),
	}
}
