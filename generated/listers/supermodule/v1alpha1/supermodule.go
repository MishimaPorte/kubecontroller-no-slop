// Code generated by main. DO NOT EDIT.

package v1alpha1

import (
	supermodulev1alpha1 "kek/apis/supermodule/v1alpha1"

	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// SuperModuleLister helps list SuperModules.
// All objects returned here must be treated as read-only.
type SuperModuleLister interface {
	// List lists all SuperModules in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*supermodulev1alpha1.SuperModule, err error)
	// SuperModules returns an object that can list and get SuperModules.
	SuperModules(namespace string) SuperModuleNamespaceLister
	SuperModuleListerExpansion
}

// superModuleLister implements the SuperModuleLister interface.
type superModuleLister struct {
	listers.ResourceIndexer[*supermodulev1alpha1.SuperModule]
}

// NewSuperModuleLister returns a new SuperModuleLister.
func NewSuperModuleLister(indexer cache.Indexer) SuperModuleLister {
	return &superModuleLister{listers.New[*supermodulev1alpha1.SuperModule](indexer, supermodulev1alpha1.Resource("supermodule"))}
}

// SuperModules returns an object that can list and get SuperModules.
func (s *superModuleLister) SuperModules(namespace string) SuperModuleNamespaceLister {
	return superModuleNamespaceLister{listers.NewNamespaced[*supermodulev1alpha1.SuperModule](s.ResourceIndexer, namespace)}
}

// SuperModuleNamespaceLister helps list and get SuperModules.
// All objects returned here must be treated as read-only.
type SuperModuleNamespaceLister interface {
	// List lists all SuperModules in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*supermodulev1alpha1.SuperModule, err error)
	// Get retrieves the SuperModule from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*supermodulev1alpha1.SuperModule, error)
	SuperModuleNamespaceListerExpansion
}

// superModuleNamespaceLister implements the SuperModuleNamespaceLister
// interface.
type superModuleNamespaceLister struct {
	listers.ResourceIndexer[*supermodulev1alpha1.SuperModule]
}
